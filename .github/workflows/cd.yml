name: CD - Deploy to Environment

on:
  workflow_run:
    workflows: ["CI - Build and Push Images"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    outputs:
      short_sha: ${{ steps.set-sha.outputs.short_sha }}
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      infra_changed: ${{ steps.changes.outputs.infra }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get SHA for tracking
        id: set-sha
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "short_sha=$(echo '${{ github.event.workflow_run.head_sha }}' | cut -c1-8)" >> $GITHUB_OUTPUT
          else
            echo "short_sha=$(echo '${{ github.sha }}' | cut -c1-8)" >> $GITHUB_OUTPUT
          fi

      - name: Detect changed services and infra
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            analytics-reporting-service: services/analytics-reporting-service/**
            billing-service: services/billing-service/**
            collection-management-service: services/collection-management-service/**
            consumer-service: services/consumer-service/**
            customer-support-service: services/customer-support-service/**
            gis-location-management-service: services/gis-location-management-service/**
            meter-management-inventory-service: services/meter-management-inventory-service/**
            notification-communication-service: services/notification-communication-service/**
            policy-management-service: services/policy-management-service/**
            third-party-integration-gateway-service: services/third-party-integration-gateway-service/**
            user-identity-access-management-service: services/user-identity-access-management-service/**
            user-service: services/user-service/**
            workflow-approval-service: services/workflow-approval-service/**
            infra: infra/**

      - name: Build matrix
        id: build-matrix
        run: |
          SERVICES=(analytics-reporting-service billing-service collection-management-service consumer-service customer-support-service gis-location-management-service meter-management-inventory-service notification-communication-service policy-management-service third-party-integration-gateway-service user-identity-access-management-service user-service workflow-approval-service)
          
          matrix=$(jq -n '{include: []}')
          changes_json='${{ toJson(steps.changes.outputs) }}'
          
          # If manual trigger, include all services
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            for svc in "${SERVICES[@]}"; do
              matrix=$(echo "$matrix" | jq --arg svc "$svc" '.include += [{"service": $svc}]')
            done
          else
            # Only include services that actually changed
            for svc in "${SERVICES[@]}"; do
              changed=$(echo "$changes_json" | jq -r --arg svc "$svc" '.[$svc]')
              if [[ "$changed" == "true" ]]; then
                matrix=$(echo "$matrix" | jq --arg svc "$svc" '.include += [{"service": $svc}]')
              fi
            done
          fi
          
          echo "matrix=$(echo $matrix | jq -c)" >> $GITHUB_OUTPUT
          echo "Generated matrix: $(echo $matrix | jq -c)"

  deploy-services:
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.matrix).include != '' }}
    runs-on: self-hosted
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy service
        run: |
          SERVICE=${{ matrix.service }}
          IMAGE_NAME=ashritha07/$SERVICE:latest
          
          echo "üîç Pulling latest image for $SERVICE..."
          docker pull $IMAGE_NAME
          
          echo "üîÑ Redeploying $SERVICE..."
          cd infra
          export IMAGE_TAG=latest
          
          docker-compose stop $SERVICE || true
          docker-compose rm -f $SERVICE || true
          docker-compose up -d $SERVICE
          
          echo "‚úÖ $SERVICE deployed"

  deploy-infrastructure:
    needs: detect-changes
    runs-on: self-hosted
    if: ${{ needs.detect-changes.outputs.infra_changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        run: |
          echo "üîÑ Infrastructure changed, restarting all infra components..."
          cd infra
          export IMAGE_TAG=latest
          
          # Stop and restart infrastructure components
          docker-compose stop kafka zookeeper postgres || true
          docker-compose rm -f kafka zookeeper postgres || true
          docker-compose up -d kafka zookeeper postgres
          
          echo "‚úÖ Infrastructure redeployed"
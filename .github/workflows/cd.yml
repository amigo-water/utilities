name: CD - Deploy to Environment

on:
  workflow_run:
    workflows: ["CI - Build and Push Images"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    outputs:
      short_sha: ${{ steps.set-sha.outputs.short_sha }}
      kafka: ${{ steps.changes.outputs.kafka }}
      databases: ${{ steps.changes.outputs.databases }}
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get SHA for tracking
        id: set-sha
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "short_sha=$(echo '${{ github.event.workflow_run.head_sha }}' | cut -c1-8)" >> $GITHUB_OUTPUT
          else
            echo "short_sha=$(echo '${{ github.sha }}' | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: Detect changed services and infra
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            analytics-reporting-service: services/analytics-reporting-service/**
            billing-service: services/billing-service/**
            collection-management-service: services/collection-management-service/**
            consumer-service: services/consumer-service/**
            customer-support-service: services/customer-support-service/**
            gis-location-management-service: services/gis-location-management-service/**
            meter-management-inventory-service: services/meter-management-inventory-service/**
            notification-communication-service: services/notification-communication-service/**
            policy-management-service: services/policy-management-service/**
            third-party-integration-gateway-service: services/third-party-integration-gateway-service/**
            user-identity-access-management-service: services/user-identity-access-management-service/**
            user-service: services/user-service/**
            workflow-approval-service: services/workflow-approval-service/**
            kafka:
              - infra/docker-compose.yml
            databases:
              - infra/docker-compose.yml

      - name: Generate matrix
        id: generate-matrix
        run: |
          SERVICES=(analytics-reporting-service billing-service collection-management-service consumer-service customer-support-service gis-location-management-service meter-management-inventory-service notification-communication-service policy-management-service third-party-integration-gateway-service user-identity-access-management-service user-service workflow-approval-service)

          matrix=$(jq -n '{include: []}')
          changes_json='${{ toJson(steps.changes.outputs) }}'

          for svc in "${SERVICES[@]}"; do
            changed=$(echo "$changes_json" | jq -r --arg svc "$svc" '.[$svc]')
            if [[ "$changed" == "true" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              matrix=$(echo "$matrix" | jq --arg svc "$svc" '.include += [{"service": $svc}]')
            fi
          done
          echo "matrix=$(echo $matrix | jq -c)" >> $GITHUB_OUTPUT

  deploy:
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.matrix).include != '' }}
    runs-on: self-hosted
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull and redeploy service only if image changed
        run: |
          SERVICE=${{ matrix.service }}
          IMAGE_NAME=ashritha07/$SERVICE:latest

          echo "🔍 Checking image digest for $SERVICE..."

          docker pull $IMAGE_NAME > /dev/null

          LOCAL_DIGEST=$(docker images --digests --format '{{.Digest}}' $SERVICE | head -n 1 || echo "")
          REMOTE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME || echo "")

          if [[ "$LOCAL_DIGEST" == "$REMOTE_DIGEST" && -n "$LOCAL_DIGEST" ]]; then
            echo "✅ No change in image digest for $SERVICE, skipping restart"
            exit 0
          fi

          echo "🔄 Image has changed or not running, redeploying $SERVICE..."

          cd infra
          export IMAGE_TAG=latest

          docker-compose stop $SERVICE || true
          docker-compose rm -f $SERVICE || true
          docker-compose up -d $SERVICE

          echo "✅ $SERVICE is deployed"

  deploy-infrastructure:
    needs: detect-changes
    runs-on: self-hosted
    if: ${{ needs.detect-changes.outputs.kafka == 'true' || needs.detect-changes.outputs.databases == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Kafka / Databases
        run: |
          cd infra
          export IMAGE_TAG=latest

          if [[ "${{ needs.detect-changes.outputs.kafka }}" == "true" ]]; then
            echo "🔄 Restarting Kafka & Zookeeper..."
            docker-compose stop kafka zookeeper || true
            docker-compose rm -f kafka zookeeper || true
            docker-compose up -d kafka zookeeper
            echo "✅ Kafka restarted"
          fi

          if [[ "${{ needs.detect-changes.outputs.databases }}" == "true" ]]; then
            echo "🔄 Restarting Postgres..."
            docker-compose stop postgres || true
            docker-compose rm -f postgres || true
            docker-compose up -d postgres
            echo "✅ Postgres restarted"
          fi
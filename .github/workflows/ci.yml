# .github/workflows/ci.yml
name: CI - Build and Push Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io  # Change to your preferred registry
  IMAGE_TAG: ${{ github.sha }}

jobs:
  changes:
    runs-on: self-hosted  # Using your private runner
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            analytics-reporting-service:
              - 'services/analytics-reporting-service/**'
            billing-service:
              - 'services/billing-service/**'
            collection-management-service:
              - 'services/collection-management-service/**'
            consumer-service:
              - 'services/consumer-service/**'
            customer-support-service:
              - 'services/customer-support-service/**'
            gis-location-management-service:
              - 'services/gis-location-management-service/**'
            meter-management-inventory-service:
              - 'services/meter-management-inventory-service/**'
            notification-communication-service:
              - 'services/notification-communication-service/**'
            policy-management-service:
              - 'services/policy-management-service/**'
            third-party-integration-gateway-service:
              - 'services/third-party-integration-gateway-service/**'
            user-identity-access-management-service:
              - 'services/user-identity-access-management-service/**'
            user-service:
              - 'services/user-service/**'
            workflow-approval-service:
              - 'services/workflow-approval-service/**'

  build-and-push:
    needs: changes
    runs-on: self-hosted
    strategy:
      matrix:
        service: [
          analytics-reporting-service,
          billing-service,
          collection-management-service,
          consumer-service,
          customer-support-service,
          gis-location-management-service,
          meter-management-inventory-service,
          notification-communication-service,
          policy-management-service,
          third-party-integration-gateway-service,
          user-identity-access-management-service,
          user-service,
          workflow-approval-service
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if service changed
        id: check-changes
        run: |
          if [[ "${{ needs.changes.outputs.services }}" == *"${{ matrix.service }}"* ]] || [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check-changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.check-changes.outputs.changed == 'true'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Verify Docker login
        if: steps.check-changes.outputs.changed == 'true'
        run: docker info


      - name: Extract metadata
        if: steps.check-changes.outputs.changed == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          # images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}
          images: docker.io/ashritha07/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: steps.check-changes.outputs.changed == 'true'
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Image digest
        if: steps.check-changes.outputs.changed == 'true'
        run: echo ${{ steps.build.outputs.digest }}

  security-scan:
    needs: [changes, build-and-push]
    runs-on: self-hosted
    if: needs.changes.outputs.services != ''
    strategy:
      matrix:
        service: [
          analytics-reporting-service,
          billing-service,
          collection-management-service,
          consumer-service,
          customer-support-service,
          gis-location-management-service,
          meter-management-inventory-service,
          notification-communication-service,
          policy-management-service,
          third-party-integration-gateway-service,
          user-identity-access-management-service,
          user-service,
          workflow-approval-service
        ]
    steps:
      - name: Check if service changed
        id: check-changes
        run: |
          if [[ "${{ needs.changes.outputs.services }}" == *"${{ matrix.service }}"* ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Trivy vulnerability scanner
        if: steps.check-changes.outputs.changed == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          # image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}
          image-ref: docker.io/ashritha07/${{ matrix.service }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'

      - name: Upload Trivy scan results
        if: steps.check-changes.outputs.changed == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-${{ matrix.service }}.sarif'

  notify-success:
    needs: [build-and-push, security-scan]
    runs-on: self-hosted
    if: success()
    steps:
      - name: Notify success
        run: |
          echo "âœ… CI Pipeline completed successfully"
          echo "ðŸš€ Images built and pushed with tag: ${{ env.IMAGE_TAG }}"